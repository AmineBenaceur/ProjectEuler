import numpy as np

def problem1():
    '''
    If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

    Find the sum of all the multiples of 3 or 5 below 1000.
    '''

    sum = 0
    for number in range(1,1000): #1-999
        if number%3==0 or number%5==0:
            sum += number

    print(sum)
    return sum

def problem2(n1,n2):
    '''
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    '''
    a = n1
    b = n2
    c = a + b
    sum = 2
    print("type: A:{} B:{} C:{}".format(type(a), type(b), type(c)))
    while True:
        # print(type(c))
        if c%2 == 0 :
            sum=sum+c
            print("increment")

        if c >= 4000000:
            print("BREAKING C={}".format(c))
            print("SUM = {}".format(sum))
            return sum

        a=b
        b=c
        c = a+b

    print(sum)
    return sum



def main():
    problem2(1,2)

if __name__ == "__main__":
    main()
